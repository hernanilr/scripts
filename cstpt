#!/bin/bash

P=${0##*/}

a="stpt"
k="/home/hernani/Documents"
j="$k/as3w"
d="$j/fruga"
o="$j/init-config/fruga"
v="frugapt"
p="pprglh99"
h="https://api.github.com"
i="git@github-fruga"
m="<?xml version=\"1.0\" encoding=\"UTF-8\"?>"
m="$m\n<projectDescription>"
n="\n\t<comment></comment>\n\t<projects>\n\t</projects>"
l="\n\t<buildSpec>\n\t\t<buildCommand>\n\t\t\t<name>com.aptana.ide.core.unifiedBuilder</name>"
l="$l\n\t\t\t<arguments>\n\t\t\t</arguments>\n\t\t</buildCommand>\n\t</buildSpec>"
l="$l\n\t<natures>\n\t\t<nature>com.aptana.ruby.core.rubynature</nature>\n\t</natures>"
l="$l\n</projectDescription>"
rv="2.3.1"

# root fruga
if [ -d $d ]
then cd $d
else mkdir $d;cd $d
fi

# este script so pode ser corrido com copy pastes
exit 

g="sharetribe";u="sharetribe";b="master"
cd $d;rm -rf $g
curl -u "$v:$p" -X DELETE -i $h/repos/$v/$g        > $o/$a-github-$g;sleep 20
curl -u "$v:$p" -X POST   -i $h/repos/$u/$g/forks >> $o/$a-github-$g;sleep 20
git clone $i:$v/$g.git

cd $d/$g

rvm use ruby-2.3.1
rvm --force gemset delete $a
rvm gemset create $a
rvm gemset use $a
gem install rails -v 4.2.5.2

git remote add github $i:$u/$g.git
git fetch github
git checkout -t -b $b github/$b

echo "$rv" > .ruby-version;echo "$a" > .ruby-gemset
echo -e "$m\n\t<name>$a-$g</name>$n$l" > .project

# spree tem fruga ustpt
#$j/scripts/ustpt -k|sh

git add .
git commit -m 'fruga ustpt'
git push origin


bundle install

# nodejs install
npm install
npm install webpack -g

# takes long to update
#bundle update;bundle install
rake db:drop
rake db:create
rake db:schema:load
rake ts:index
rake ts:start

#React component static build
foreman start -f Procfile.static
#hot loading styleguide
#foreman start -f Procfile.hot

git init
git add .
git commit -m 'fruga init commit'

# Instalar spree
# Usa input admin user
spring stop
rails g spree:install --migrate=false --sample=false --seed=false --user_class=Spree::User --enforce_available_locales=true

rake spree_auth:install:migrations

rails g spree_social:install
rails g spree_reviews:install
rails g spree_i18n:install           # Runs migrations by default

# Para criar local DB inicial
rake railties:install:migrations 
rake db:migrate
rake db:seed

# Inicializacao da configuracao stpt
$j/scripts/ustpt.sh -l|sh

g="stpt";b="{ \"name\": \"$a\",\"description\": \"Mercado Fruga Portugal\" }"
curl -u "$v:$p" -X DELETE -i $h/repos/$v/$g         > $o/$a-github-$g;sleep 20
curl -u "$v:$p" -X POST   -i $h/user/repos -d "$b" >> $o/$a-github-$g;sleep 20

git add .
git commit -m 'fruga generator commit'

git remote add origin $i:$v/$a.git
git push -u origin master

#INIT heroku
heroku apps:destroy   --confirm $a
heroku apps:create $a --region eu

# eneble serving static files from the `/public` 
heroku config:set RAILS_SERVE_STATIC_FILES=true

# numero processos webserver com 1 dyno 4 max - limitacoes de memoria
heroku config:set WEB_CONCURRENCY=2
# MRI ruby is not thread safe
heroku config:set MAX_THREADS=1

# aws amazon for gem asset_sync 
# configurar CORS (Cross-Origin Resource Sharing) nos bukets
# para glyphicons funcionarem
heroku config:set MFAWS_HOST="$MFAWS_HOST"
heroku config:set MFAWS_BUCKET="$MFAWS_BUCKET"
heroku config:set MFAWS_KEY="$MFAWS_KEY"
heroku config:set MFAWS_SECRET="$MFAWS_SECRET"
heroku config:set MFFOG_PROVIDER="$MFFOG_PROVIDER"
heroku config:set MFFOG_DIRECTORY="$MFFOG_DIRECTORY"
heroku config:set MFFOG_REGION="$MFFOG_REGION"

# action mailer
heroku config:set CFSMTP="$CFSMTP"
heroku config:set CFSMTP_PASSWORD="$CFSMTP_PASSWORD"

# spree_login_social
heroku config:set MFGP_API_KEY="$MFGP_API_KEY"
heroku config:set MFGP_API_SECRET="$MFGP_API_SECRET"
heroku config:set MFFB_API_KEY="$MFFB_API_KEY"
heroku config:set MFFB_API_SECRET="$MFFB_API_SECRET"
heroku config:set MFTW_API_KEY="$MFTW_API_KEY"
heroku config:set MFTW_API_SECRET="$MFTW_API_SECRET"

# newrelic 
#heroku addons:create  newrelic:wayne
#heroku addons:destroy newrelic:wayne --confirm $a
heroku config:set NEW_RELIC_LICENSE_KEY="$FPNEW_RELIC_LICENSE_KEY"
heroku config:set NEW_RELIC_APP_NAME="$a"

# heroku sem DB da erro em asset:precompile Retirado mais abaixo
rake assets:precompile
git add .
git commit -m 'fruga assets:precompile init heroku DB'
git push heroku master

# Para colocar pgbackup precisa DB
heroku run rake db:migrate
heroku run rake db:seed
heroku pg:backups schedule DATABASE_URL --app $a

# Para colocar assets:precompile no heroku precisa ter DB
rm -rf public/assets
# Eliminar rails default manifest files 
# Spree uses spree/frontend/all spree/backend/all
rm -f app/assets/stylesheets/application.css
rm -f app/assets/javascripts/application.js
git add . -A
git commit -m 'fruga assets:precompile feito no heroku'
git push origin master
git push heroku master

# deve ser executado depois de github merge 
# porque podem haver novas migracoes
rake railties:install:migrations 
rake db:migrate

# Fruga brand & images & static files
$k/fruga-brand/actsite.sh -m
$j/scripts/ustpt.sh -a|sh

echo "RACK_ENV=development" >> .env
echo "PORT=3000" >> .env
echo ".env" >> .gitignore

spring stop
bundle update;bundle install

git add .
git commit -m 'fruga ustpt'
git push origin master
git push heroku master

#heroku pg:reset DATABASE # DELETE ALL ROWS
heroku run rake railties:install:migrations
heroku run rake db:migrate
heroku run rake db:seed

heroku domains:add mercado.fruga.pt
heroku ps:scale web=1
heroku restart

#heroku run rake assets:sync 
